import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import versioning.Deps

plugins {
    id 'idea'
    id 'java'
    id 'application'
    id 'kotlin-convention-helper'
    id 'jackson-convention-helper'
    //id 'io.micronaut.application' // FIXME: `org.springframework.boot` also adds `developmentOnly` so Gradle fails.
    id 'dependencies-reporting-helper'
    //id 'com.webcohesion.enunciate'
    id 'com.github.johnrengelman.shadow'
    id 'org.hibernate.orm'
    id 'org.springframework.boot'
}

repositories.jcenter()

dependencies {
    //enunciate('dk.jyskebank.tooling.enunciate:enunciate-openapi:1.1.+')

    annotationProcessor     platform(project(':convention'))
    kapt                    platform(project(':convention'))
    compileOnly             platform(project(':convention'))
    developmentOnly         platform(project(':convention'))
    implementation          platform(project(':convention'))
    runtimeOnly             platform(project(':convention'))
    testAnnotationProcessor platform(project(':convention'))
    kaptTest                platform(project(':convention'))
    testImplementation      platform(project(':convention'))
    testRuntimeOnly         platform(project(':convention'))

    /*
     * ORDER MATTERS!!
     * JPAMODELGEN better go first!
     * For IDEA based build (Ant) this has to be in `annotationProcessor`
     */
    kapt                    'io.micronaut.configuration:micronaut-openapi'
    kapt                    Deps.Libs.VALIDATOR_AP
    kapt                    'io.micronaut.spring:micronaut-spring-annotation'//:2.1.0'
    kapt                    'io.micronaut.spring:micronaut-spring-boot-annotation'//:2.1.0'
    kapt                    'io.micronaut.spring:micronaut-spring-web-annotation'//:2.1.0'
    kapt                    'io.micronaut:micronaut-graal'
    kapt                    'io.micronaut:micronaut-inject-java'
    kapt                    'io.micronaut:micronaut-validation'
    kapt                    'org.springframework.boot:spring-boot-configuration-processor'//:2.1.0'

    compileOnly             Deps.Jakarta.CDI
    compileOnly             Deps.Jakarta.SERVLET
    compileOnly             Deps.Libs.SLF4J_API
    compileOnly             'org.graalvm.nativeimage:svm'

    developmentOnly         'io.methvin:directory-watcher'
    developmentOnly         'io.micronaut:micronaut-runtime-osx'
    developmentOnly         'net.java.dev.jna:jna'

    implementation          project(':shared')
    implementation          project(':time-service.api')
    implementation          project(':time-service.app')
    implementation          'com.blazebit:blaze-persistence-integration-hibernate-base'
    implementation          'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation          'com.kumuluz.ee.rest:kumuluzee-rest-core:1.2.3'
    //implementation          'io.ktor:ktor-jackson'
    //implementation          'io.ktor:ktor-server-netty'
    implementation          'io.micronaut.configuration:micronaut-hibernate-jpa'
    implementation          'io.micronaut.configuration:micronaut-hibernate-jpa-spring' //Spring-based transaction management
    implementation          'io.micronaut.configuration:micronaut-micrometer-core'
    implementation          'io.micronaut.data:micronaut-data-hibernate-jpa:1.1.0.RC1'
    //implementation          'io.micronaut.kotlin:micronaut-kotlin-extension-functions'
    //implementation          'io.micronaut.kotlin:micronaut-ktor'
    implementation          'io.micronaut.kotlin:micronaut-kotlin-runtime:1.0.1'
    implementation          'io.micronaut.kotlin:micronaut-kotlin-extension-functions:1.0.1'
    implementation          'io.micronaut.configuration:micronaut-jdbc-hikari' //Important for starting up Database connectivity
    implementation          'io.micronaut:micronaut-http-server'
    implementation          'io.micronaut:micronaut-inject'
    implementation          'io.micronaut:micronaut-management' //management endpoints
    implementation          'io.micronaut:micronaut-runtime' //FIXME: N.B. INCLUDE IT !!!!!!!!!!!!!!!!!
    implementation          'io.swagger.core.v3:swagger-annotations'
    implementation          Deps.Libs.COROUTINES_JDK8
    implementation          Deps.Libs.COROUTINES_RXJAVA2
    implementation          'org.springframework.boot:spring-boot-starter'
    implementation          'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly             'ch.qos.logback:logback-classic'
    runtimeOnly             'com.h2database:h2'
    runtimeOnly             'com.blazebit:blaze-persistence-core-impl'
    runtimeOnly             'com.blazebit:blaze-persistence-entity-view-impl'
    runtimeOnly             'com.blazebit:blaze-persistence-integration-hibernate-5.4'
    runtimeOnly             'com.blazebit:blaze-persistence-jpa-criteria-impl'
    runtimeOnly             'io.micronaut.spring:micronaut-spring-boot'//:2.1.0')
    runtimeOnly             'io.micronaut.spring:micronaut-spring-web'//:2.1.0')
    runtimeOnly             'io.micronaut:micronaut-http-server-netty'

    kaptTest                'org.apache.logging.log4j:log4j-to-slf4j:2.13.3'
    kaptTest                'org.slf4j:jul-to-slf4j:1.7.30'

    testImplementation      'io.micronaut.test:micronaut-test-junit5'
    testImplementation      'io.micronaut.test:micronaut-test-kotlintest'
}

rootProject.idea {
    //noinspection GroovyAssignabilityCheck
    project {
        settings {
            doNotDetectFrameworks('spring')
        }
    }
}

idea.module.downloadSources = true

hibernate {
    enhance {
        enableLazyInitialization    = true
        enableDirtyTracking         = true
        enableAssociationManagement = true
        enableExtendedEnhancement   = false
    }
}

application {
    //mainModule.convention('com.example.marvel.runtime')
    mainClass                 = 'com.example.marvel.ApplicationKt'
    mainClassName             = 'com.example.marvel.ApplicationKt' //FIXME: Shadow plugin uses older Gradle Tooling API, there is no `mainClass` prop
    applicationDefaultJvmArgs = ['-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote']
}

tasks.withType(ProcessResources).configureEach {
    filesMatching('openapi.properties') {
        System.setProperty('micronaut.openapi.config.file', path) //FIXME
        expand(project.properties)
    }
}
tasks.withType(ShadowJar).configureEach {
    mergeServiceFiles()
}
tasks.named('run', JavaExec) {
    it.jvmArgs('-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop')
}
tasks.withType(JavaExec).configureEach {
    classpath += configurations.developmentOnly
}
tasks.withType(Test).configureEach {
    classpath += configurations.developmentOnly
    useJUnitPlatform()
    exclude('**/Native*')
}

configure([
    project(':time-service.app'),
    project(':time-service.api')
]) {
    apply plugin: 'io.micronaut.library' //adds `micronaut-inject` to compile and `micronaut-inject-<lang>` to apt
    apply plugin: 'kotlin-convention-helper'

    dependencies {
        annotationProcessor     platform(project(':convention'))
        kapt                    platform(project(':convention'))
        compileOnly             platform(project(':convention'))
        implementation          platform(project(':convention'))
        runtimeOnly             platform(project(':convention'))
        testAnnotationProcessor platform(project(':convention'))
        kaptTest                platform(project(':convention'))
        testImplementation      platform(project(':convention'))
        testRuntimeOnly         platform(project(':convention'))

        kapt                    'io.micronaut.data:micronaut-data-processor'          // In theory should allow `javax.transaction.Transactional` usage.

        kapt                    'io.micronaut.spring:micronaut-spring-web-annotation' // Allows Spring MVC annotations to be processes.

        //FIXME: Unfortunately all this is leaked to compile classpath, hence visible in subproject. Otherwise AOT compilation won't work.
        //main dependency for integration Micronaut <-> Hibernate
        implementation          'io.micronaut.configuration:micronaut-hibernate-jpa'

        implementation          'io.micronaut:micronaut-core'       //FIXME: N.B. INCLUDE THIS ONE, annotated classes, endpoints won't be discovered otherwise !!!!!!!!!!!!!!!!!!
        implementation          'io.micronaut:micronaut-validation' //FIXME: N.B. INCLUDE THIS ONE, annotated classes, endpoints won't be discovered otherwise !!!!!!!!!!!!!!!!!!
        implementation          'io.micronaut:micronaut-runtime'    //FIXME: N.B. INCLUDE THIS ONE, annotated classes, endpoints won't be discovered otherwise !!!!!!!!!!!!!!!!!!
    }
}
